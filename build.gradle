
plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jacoco"
    id "jaci.openrio.gradle.GradleRIO" version "2018-beta-2f"
}

def snobotSimVersion = "0.2"

repositories
{
    maven {
        url "http://raw.githubusercontent.com/pjreiniger/maven_repo/master/"
    }

    mavenCentral()
 }

sourceSets {
    main {
        java {
            srcDirs = ["src"]
        }
    }
    
    test
    {
        java
        {
            srcDirs = ["test/unit_tests"]
        }
    }
}

dependencies {

    compile wpilib()
    compile files('dependencies/RIOdroid.jar')
    
    // Testing
    testCompile 'junit:junit:4.12'
    testRuntime 'log4j:log4j:1.2.16'
    testCompile 'com.snobot.simulator:snobot_sim_gui:'  + snobotSimVersion + ':all'
    testCompile 'com.snobot.simulator:snobot_sim_java:' + snobotSimVersion + ':uber_native-linux'
    testCompile 'com.snobot.simulator:snobot_sim_java:' + snobotSimVersion + ':uber_native-windows'
    
    // TODO temp, hopefully
    testRuntime 'edu.wpi.first.ntcore:ntcore-jni:+:all'
    testRuntime 'edu.wpi.first.cscore:cscore-jni:+:all'
}

test {
	ignoreFailures = true
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,  exclude: 
                [
                'com/team254/lib/trajectory/**',
                'com/snobot/lib/motion_profile/**',
                'com/snobot/lib/vision/**',
                'com/snobot/lib/external_connection/**',
                'com/snobot/lib/adb/**',
                ])
        })
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}
